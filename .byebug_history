continue
presentation.pdf_identifier.to_s
presentation.pdf_identifier
presentation
continue
MsuFile.first.file
MsuFile.first
MsuFile.all
MsuFile
@lecture
@plecture
@file
continue
@presentation.msu_lecture.msu_discipline
@presentation
@presentation.pdf_filename
continue
Rails.root
@presentation
path_to(@presentation.pdf_filename)
continue
user
continue
MsuUser.create(name: 'tem', password: 'qwerqwer')
MsuUser.all
MsuUser.find_by(name: name)
user
params[:name]
params
continue
flash
flash.any?
flas
flash.an
continue
params[:new_order].all
params[:new_order].enumerate
params[:new_order].each
params[:new_order]
params[new_order]
continue
params
continue
@new_images
params
continue
image_params[:images].first.original_filename
image_params[:images].first.original_title
image_params[:images].first
image_params.images
image_params.first
image_params
continue
params[:msu_image][:images].first
params[:msu_image][:images]
params[:msu_image].first
params[:msu_image]
params[:msu_images]
image_params
images_params
continue
flash[:danger]
continue
@discipline.valid?
continue
exit
params
continue
params[:msu_presentation][:path]
params[:msu_presentation][:path][:filename]
params[:msu_presentation][:filename]
params[:msu_presentation]
params
params[:title]
params[:path]
params[:filename]
params
continue
params
continue
@presentation
continue
params[:msu_presentation]
params :msu_presentation
params
continue
@lecture.errors.full_messages
@lecture.errors.full_messages.to_s
@lecture.errors.full_messages.string
@lecture.errors.full_messages.split
@lecture.errors.full_messages.first
@lecture.errors.full_messages
flash[:warning].first
flash[:warning].each do |m| m end
flash[:warning].each {|m| m}
flash[:warning].first
flash[:warning]
flash
message
continue
@lecture.errors.full_messages
continue
@lecture.errors.full_messages
flash
continue
flash
@lecture.errors.messages
@lecture.errors.full_messages
@lecture.errors.full_message
@lecture.errors.messages
@lecture.errors
flash[:warning][message]
flash[:warning][:message]
flash[:warning]
flash[warning:]
flash[warning]
message
continue
@lecture.errors.messages
@lecture.errors.full_messages
@lecture.errors
@lecture
flash.first.[warning:]
flash.first.[:warning]
flash.first.[warning]
flash.first.key
flash.each {|key, message|}
flash.each {|key, message| key}
flash.each {|key, message| key, message}
flash.each {|key, message| message}
continue
flash.each {|key, message| message}
flash.each {|key, message|. message}
flash.each do {|key, message|. message}
flash.each do {|key, message| message}
flash.each do |key, message| {message}
flash.each do |key, message|
flash.keys
flash.key
@lecture.errors.first
@lecture.errors
flash.first.second
flash.first.first
flash.second
flash.first
flash
continue
flash
continue
flash.now.each {|m| m}
flash.now
continue
flash.now[:error][:title]
flash.now[:error].[:title]
flash.now[:error].first.second
flash.now[:error].first.first
flash.now[:error]
m
flash.now[:error].each do |m|
flash.now[:error].each
flash.now[:error].first
flash.now[:error]
continue
alert
continue
flash.now[:error][:title].first
flash.now[:error][:title]
flash.now[:error]
@alert
continue
flash.now[:error]
flash.now
@alert
exit
params
